// <auto-generated />
using System;
using MaintainerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MaintainerApi.Migrations
{
    [DbContext(typeof(MaintainerApiContext))]
    [Migration("20190806115651_MaintainerApi")]
    partial class MaintainerApi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MaintainerApi.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("MaintainerApi.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChefeId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("MaintainerApi.Models.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Editoras");
                });

            modelBuilder.Entity("MaintainerApi.Models.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExemplarId");

                    b.Property<int>("FuncionarioId");

                    b.Property<int>("ObraId");

                    b.Property<bool>("Retirada");

                    b.Property<int>("Retorno");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ExemplarId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("MaintainerApi.Models.Exemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aquisicao");

                    b.Property<int>("Numero");

                    b.Property<int>("ObraId");

                    b.Property<string>("SituacaoExemplar");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.ToTable("Exemplares");
                });

            modelBuilder.Entity("MaintainerApi.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId");

                    b.Property<string>("Matricula");

                    b.Property<int>("Salario");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("MaintainerApi.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("MaintainerApi.Models.GeneroObra", b =>
                {
                    b.Property<int>("GeneroId");

                    b.Property<int>("ObraId");

                    b.HasKey("GeneroId", "ObraId");

                    b.HasIndex("ObraId");

                    b.ToTable("GeneroObras");
                });

            modelBuilder.Entity("MaintainerApi.Models.Manutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExemplarId");

                    b.Property<int>("FuncionarioId");

                    b.Property<string>("MotivoManutencao");

                    b.Property<int>("MotivoManutencaoId");

                    b.Property<bool>("Retirado");

                    b.Property<int>("Retorno");

                    b.HasKey("Id");

                    b.HasIndex("ExemplarId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("MotivoManutencaoId");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("MaintainerApi.Models.MotivoManutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao");

                    b.HasKey("Id");

                    b.ToTable("MotivoManutencoes");
                });

            modelBuilder.Entity("MaintainerApi.Models.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EditoraId");

                    b.Property<string>("Publicacao");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("EditoraId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("MaintainerApi.Models.ObraAutor", b =>
                {
                    b.Property<int>("AutorId");

                    b.Property<int>("ObraId");

                    b.Property<string>("Ordem");

                    b.HasKey("AutorId", "ObraId");

                    b.HasIndex("ObraId");

                    b.ToTable("ObraAutores");
                });

            modelBuilder.Entity("MaintainerApi.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ObraId");

                    b.Property<bool>("Reservado");

                    b.Property<bool>("Retirado");

                    b.Property<int>("UsuarioId");

                    b.HasKey("ReservaId");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("MaintainerApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("CPF");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<int>("IndicadorId");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.Property<string>("UF");

                    b.Property<int?>("UsuarioListId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioListId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MaintainerApi.Models.Emprestimo", b =>
                {
                    b.HasOne("MaintainerApi.Models.Exemplar", "Exemplar")
                        .WithMany("Emprestimos")
                        .HasForeignKey("ExemplarId");

                    b.HasOne("MaintainerApi.Models.Funcionario", "Funcionario")
                        .WithMany("Emprestimos")
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("MaintainerApi.Models.Obra", "Obra")
                        .WithMany("Emprestimos")
                        .HasForeignKey("ObraId");

                    b.HasOne("MaintainerApi.Models.Usuario", "Usuario")
                        .WithMany("Emprestimos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("MaintainerApi.Models.Exemplar", b =>
                {
                    b.HasOne("MaintainerApi.Models.Obra", "Obra")
                        .WithMany("Exemplares")
                        .HasForeignKey("ObraId");
                });

            modelBuilder.Entity("MaintainerApi.Models.Funcionario", b =>
                {
                    b.HasOne("MaintainerApi.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");
                });

            modelBuilder.Entity("MaintainerApi.Models.GeneroObra", b =>
                {
                    b.HasOne("MaintainerApi.Models.Genero", "Genero")
                        .WithMany("GeneroObras")
                        .HasForeignKey("GeneroId");

                    b.HasOne("MaintainerApi.Models.Obra", "Obra")
                        .WithMany("GeneroObras")
                        .HasForeignKey("ObraId");
                });

            modelBuilder.Entity("MaintainerApi.Models.Manutencao", b =>
                {
                    b.HasOne("MaintainerApi.Models.Exemplar", "Exemplar")
                        .WithMany("Manutencoes")
                        .HasForeignKey("ExemplarId");

                    b.HasOne("MaintainerApi.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("MaintainerApi.Models.MotivoManutencao", "MotivoManutencaoList")
                        .WithMany("Manutencoes")
                        .HasForeignKey("MotivoManutencaoId");
                });

            modelBuilder.Entity("MaintainerApi.Models.Obra", b =>
                {
                    b.HasOne("MaintainerApi.Models.Editora", "Editora")
                        .WithMany("Obras")
                        .HasForeignKey("EditoraId");
                });

            modelBuilder.Entity("MaintainerApi.Models.ObraAutor", b =>
                {
                    b.HasOne("MaintainerApi.Models.Autor", "Autor")
                        .WithMany("ObraAutores")
                        .HasForeignKey("AutorId");

                    b.HasOne("MaintainerApi.Models.Obra", "Obra")
                        .WithMany("ObraAutores")
                        .HasForeignKey("ObraId");
                });

            modelBuilder.Entity("MaintainerApi.Models.Reserva", b =>
                {
                    b.HasOne("MaintainerApi.Models.Obra", "Obra")
                        .WithMany("Reservas")
                        .HasForeignKey("ObraId");

                    b.HasOne("MaintainerApi.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("MaintainerApi.Models.Usuario", b =>
                {
                    b.HasOne("MaintainerApi.Models.Usuario", "UsuarioList")
                        .WithMany("Usuarios")
                        .HasForeignKey("UsuarioListId");
                });
#pragma warning restore 612, 618
        }
    }
}
